program => (statement)*

statement => if | while | codeBlock | function | return | valueDeclaration | input | output | assignment

if => "if" expression codeBlock ("else" codeBlock)?
while => "while" "(" expression ")" codeBlock
codeBlock => "{" program "}"
function => STRING "(" (STRING (",")*)* ")" codeBlock
return => "return" expression
valueDeclaration => "val" STRING ":=" expression
assignment => STRING ":=" expression
input => "input" STRING
output => "output" expression



functionCall = expression "(" (expression (",")*)* ")"
listAccess = expression "[" expression "]"
listDeclaration = "[" (expression (",")*)* "]"

expression => logical
logical => equality ( ( "and" | "or" ) equality )*
equality => comparison ( ( "!=" | "==" ) comparison )*
comparison => addition ( ( ">" | ">=" | "<" | "<=" ) addition )*
addition => multiplication ( ( "-" | "+" ) multiplication )*
multiplication => unary ( ( "/" | "*" ) unary )*
unary => ( "!" | "-" ) unary | primary
primary => NUMBER | STRING | listAccess | "false" | "true" | "(" expression ")" | listDeclaration | functionCall | listAccess
