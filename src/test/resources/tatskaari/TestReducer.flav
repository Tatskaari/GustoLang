function add(a, b) do
  return a + b
end

(* This is a comment that has
no bearing on the code *)

function mul(a, b) do
  return a * b
end

function reduce(start, list, reducer) do
  val total := start

  val n := 0
  val next := list[n]

  while(next != -1) do
    total := reducer(total, next)
    n := n + 1
    next := list[n]
  end

  return total
end

val list := [1, 2, 3, 4, -1]
val addRes := reduce(0, list, add)
val mulRes := reduce(1, list, mul)
