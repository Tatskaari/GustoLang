function add(a, b) do
  return a + b
end

(* This is a comment that has
no bearing on the code *)

function mul(a, b) do
  return a * b
end

function reduce(start, List, reducer) do
  integer total := start

  integer n := 0
  integer next := List[n]

  while(next != -1) do
    total := reducer(total, next)
    n := n + 1
    next := List[n]
  end

  return total
end

list List := [1, 2, 3, 4, -1]
integer addRes := reduce(0, List, add)
integer mulRes := reduce(1, List, mul)
